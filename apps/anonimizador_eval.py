# apps/anonimizador_eval.py
import streamlit as st
from datetime import datetime

def _riesgo(tipo:str, tecnica:str, salt:bool, offchain:bool) -> int:
    base = {"No personal":1, "Personal":3, "Especial (art. 9)":5}[tipo]
    t = {"Hash":2, "Hash+Salt":1, "Pseudonimizaci√≥n":2, "Cifrado":1, "Off-chain + Hash":1}.get(tecnica, 3)
    bonus = -1 if salt else 0
    bonus += -1 if offchain else 0
    return max(1, min(5, base + t + bonus - 2))  # centrado did√°ctico

def main(st=st):
    st.set_page_config(page_title="Evaluador de anonimizaci√≥n", page_icon="üß©", layout="wide")
    st.title("Evaluador de anonimizaci√≥n / derecho al olvido")

    tipo = st.selectbox("Tipo de dato", ["No personal", "Personal", "Especial (art. 9)"])
    tecnica = st.selectbox("T√©cnica", ["Hash", "Hash+Salt", "Pseudonimizaci√≥n", "Cifrado", "Off-chain + Hash"])
    salt = st.checkbox("Gesti√≥n correcta de 'salt' / claves")
    offchain = st.checkbox("Datos fuera de cadena con verificaci√≥n por hash")

    riesgo = _riesgo(tipo, tecnica, salt, offchain)
    etiquetas = {1:"Muy bajo",2:"Bajo",3:"Medio",4:"Alto",5:"Muy alto"}
    st.metric("Riesgo de reidentificaci√≥n", f"{riesgo} ¬∑ {etiquetas[riesgo]}")

    st.subheader("Notas")
    if tecnica == "Hash":
        st.markdown("- El hash **no** es anonimizaci√≥n per se; puede ser pseud√≥nimo reversible por diccionario.")
    if tecnica in ("Hash+Salt", "Cifrado"):
        st.markdown("- La seguridad depende de la gesti√≥n de **sal**/claves (rotaci√≥n, acceso, custodia).")
    if tecnica.startswith("Off-chain"):
        st.markdown("- Mant√©n on-chain solo el hash; controla accesos y retenciones off-chain.")

    st.divider()
    st.subheader("S√≠ntesis (5‚Äì7 l√≠neas)")
    txt = st.text_area("Explica c√≥mo cumplir√≠as el derecho de supresi√≥n en tu dise√±o.")
    md = f"""# S20 ¬∑ Evaluador de anonimizaci√≥n
- Fecha: {datetime.utcnow().isoformat()}Z
- Tipo de dato: {tipo}
- T√©cnica: {tecnica}
- 'Salt' gestionado: {salt}
- Off-chain: {offchain}
- Riesgo: {riesgo}
## S√≠ntesis
{txt}
"""
    st.download_button("Descargar evidencia (.md)", md.encode("utf-8"), "s20_anonimizador_eval.md")

if __name__ == "__main__":
    main()
